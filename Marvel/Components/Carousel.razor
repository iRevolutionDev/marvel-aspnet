@using Components
@using Microsoft.VisualBasic
@using System.Collections.ObjectModel
@using Marvel.Constants

<div
  class="relative">
  <!--Carousel indicators-->
  <div
    class="absolute bottom-0 left-0 right-0 z-[2] mx-[15%] mb-4 flex list-none justify-center p-0">
    @foreach (var item in Items)
    {
      <CarouselButton
        Active="@(ActiveSlide == Items.IndexOf(item))"
        ActiveChanged="@(() => SlideTo(Items.IndexOf(item)))"
        />
    }
  </div>

  <!--Carousel items-->
  <div
    class="relative w-full overflow-hidden after:clear-both after:block after:content-['']">
    @foreach (var item in Items)
    {
      <CarouselItem
        Title="@item.Title"
        Subtitle="@item.Subtitle"
        ImageUrl="@item.ImageUrl"
        Active="@(ActiveSlide == Items.IndexOf(item))"
        Direction="@(ActiveSlide == Items.IndexOf(item) ? Direction.None : ActiveSlide > Items.IndexOf(item) ? Direction.Right : Direction.Left)"
        />
    }
  </div>

  <!--Carousel controls - prev item-->
  <button
    class="absolute bottom-0 left-0 top-0 z-[1] flex w-[15%] items-center justify-center border-0 bg-none p-0 text-center text-white opacity-50 transition-opacity duration-150 ease-[cubic-bezier(0.25,0.1,0.25,1.0)] hover:text-white hover:no-underline hover:opacity-90 hover:outline-none focus:text-white focus:no-underline focus:opacity-90 focus:outline-none motion-reduce:transition-none"
    type="button"
    @onclick="SlidePrev">
    <span class="inline-block h-8 w-8">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="h-6 w-6">
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M15.75 19.5L8.25 12l7.5-7.5" />
      </svg>
    </span>
    <span
      class="!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]">Previous</span>
  </button>
  <!--Carousel controls - next item-->
  <button
    class="absolute bottom-0 right-0 top-0 z-[1] flex w-[15%] items-center justify-center border-0 bg-none p-0 text-center text-white opacity-50 transition-opacity duration-150 ease-[cubic-bezier(0.25,0.1,0.25,1.0)] hover:text-white hover:no-underline hover:opacity-90 hover:outline-none focus:text-white focus:no-underline focus:opacity-90 focus:outline-none motion-reduce:transition-none"
    type="button"
    @onclick="SlideNext"
    >
    <span class="inline-block h-8 w-8">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="h-6 w-6">
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M8.25 4.5l7.5 7.5-7.5 7.5" />
      </svg>
    </span>
    <span
      class="!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]"
      >Next</span>
  </button>
</div>

@code {
  private int ActiveSlide { get; set; }
  private int NextSlide { get; set; }
  private int PrevSlide { get; set; }

  private Collection<CarouselItem> Items { get; set; } = new()
  {
    new CarouselItem
    {
      Title = "Wolverine",
      Subtitle = "The best movie ever",
      ImageUrl = "/images/slide-1.jpg"
    },
    new CarouselItem
    {
      Title = "Woman of Marvel",
      Subtitle = "The best movie ever",
      ImageUrl = "/images/slide-2.jpg"
    }
  };
  
  private void SlideTo(int slide)
  {
    if (slide < 0 || slide >= Items.Count) return;

    ActiveSlide = slide;
    CalculateSlides();
  }

  private void SlideNext()
  {
    if (ActiveSlide == Items.Count - 1)
    {
      ActiveSlide = 0;
      return;
    }
    
    ActiveSlide++;
    CalculateSlides();
  }
  
  private void SlidePrev()
  {
    if (ActiveSlide == 0)
    {
      ActiveSlide = Items.Count - 1;
      return;
    }
    
    ActiveSlide--;
    CalculateSlides();
  }
  
  private void CalculateSlides()
  {
    NextSlide = ActiveSlide == Items.Count - 1 ? 0 : ActiveSlide + 1;
    PrevSlide = ActiveSlide == 0 ? Items.Count - 1 : ActiveSlide - 1;
  }
}